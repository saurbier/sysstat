#!/usr/bin/env rant -f

# Copyright (c) 2006-2009 Konstantin Saurbier 
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.


import "rubypackage"
import "directedrule"
import "autoclean"
import "md5"
import "sys/more"

package_files = sys["README", "LICENSE", "CHANGES", "Rantfile", "install.rb"]
source_files = sys["src/{bin,classes,conf,html,rc}/*"]
dist_files = package_files + source_files

var[:version] = "2.19"

# Install directories
var[:prefix] = "/usr/local/sysstat"

if(var[:PREFIX])
  var[:prefix] = var[:PREFIX].chomp("/")
end
var[:graphdir] = var[:prefix] + "/output"
var[:bindir] = var[:prefix] + "/bin"
var[:dbdir] = var[:prefix] + "/db/sysstat"
var[:etcdir] = var[:prefix] + "/etc/sysstat"
var[:libdir] = var[:prefix] + "/lib/sysstat"


var[:hostname] = %x[hostname].chomp
var[:os] = %x[uname -s].downcase.chomp
if(var[:os] == "freebsd")
  var[:os] << "6"
elsif(var[:os] == "linux")
  var[:os] << "2.6"
end

var[:harddisks] = Array.new
var[:mountpoints] = Array.new
%x[mount | egrep -v "proc|devfs|udev|tmpfs|sysfs|usbfs|devpts|nfs|autofs|union"].each_line do |line|
  var[:harddisks] << line.chomp.split(" ")[0].split("/")[2]
  var[:mountpoints] << line.chomp.split(" ")[2]
end

# Get network interfaces
var[:interfaces] = Array.new
%x[ifconfig].each_line do |line|
  unless(line =~ /^[a-z].*/)
    next
  end

  line = line.split(" ")[0].chop
  if(line =~ /^lo.*/)
    next
  elsif(line =~ /^vbox.*/)
    next
  else
    var[:interfaces] << line
  end
end

subdirs "src"

desc "Default action (create all files)"
task :default => :all

desc "Create all files"
task :all => ["src/bin/all", "src/classes/all", "src/conf/all", "src/html/all", "src/rc/all"]

desc "Install"
task :install => ["src/bin/install", "src/classes/install", "src/conf/install", "src/html/install", "src/rc/install"]

task :install => :all do |t|
  if(var[:os] =~ /freebsd/)
    sys "install -d -o root -g wheel -m 755 #{dbdir}"
  elsif(var[:os] =~ /linux/)
    sys "install -d -o root -g root -m 755 #{dbdir}"
  else
    # do nothing!
  end

  puts ""
  puts "----------------------------------------------------------------------------"
  puts ""
  puts "Identified operating system: #{var[:os].capitalize}"
  puts "Identified harddisks: #{var[:harddisks].join(", ")}"
  puts "Identified mountpoints: #{var[:mountpoints].join(", ")}"
  puts "Identified network interfaces: #{var[:interfaces].join(", ")}"
  puts ""
  puts <<-EOF
The Sysstat scripts are now installed.
Please check and adjust the configuration. It was installed at:

    #{var[:prefix]}/etc/sysstat/sysstat.yml

To start the daemon, use the supplied RC/Init script at:

    #{var[:prefix]}/bin/sysstat.sh

EOF
end


#----------------------------------------------------------------------------
# Make release
#
task :installer do |t|
  sys "rant-import --force --auto install.rb"
end
  
desc "Make release"
task :release => ["installer", "tar"]
#
#----------------------------------------------------------------------------


desc "Create tgz-package"
gen RubyPackage, "sysstat" do |t|  
  t.name = "sysstat"
  t.version = var[:version]
  t.files = dist_files
  t.tar_task
end

desc "Remove autogenerated and backup files"
gen AutoClean, :clean
