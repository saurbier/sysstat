#!/usr/bin/env rant -f

# Copyright (c) 2006-2009 Konstantin Saurbier 
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.


gen Action, /all/ do
  source "html.rant"
end


var[:html_files] = Array.new
sys["*.html.in"].each do |file|
  var[:html_files] << file.gsub(".in", "")
end

var[:harddisks].each do |hdd|
  var[:html_files] << "hdds-#{hdd}.html"
end

var[:interfaces].each do |interface|
  var[:html_files] << "net-#{interface}.html"
end

var[:html_files] << "index.html"


gen Rule, ".html" => ".html.in" do |t|
  puts "Creating #{t.name}"

  target_file = File.new(t.name, "w+")
  source_file = File.new(t.source, "r")
  source_file.each_line do |line|
    line = line.gsub("HOSTNAME", var[:hostname])
    target_file << line
  end
  source_file.close
  target_file.close
end

file "index.html" do |t|
  puts "Creating #{t.name}"
  target_file = File.new(t.name, "w+")
  source_file = File.new("#{t.name}.tmpl", "r")
  source_file.each_line do |line|
    line = line.gsub("HOSTNAME", var[:hostname])

    tmp = ""
    var[:interfaces].map {|iface| tmp << "<p>\n\t<a href=\"./net-#{iface}.html\"><img border=\"0\" src=\"net-#{iface}-day.png\" alt=\"Network statistics\"></a>\n</p>\n"}
    line = line.gsub("NETWORK", tmp)

    tmp = ""
    var[:harddisks].map {|hdd| tmp << "<p>\n\t<a href=\"./hdds-#{hdd}.html\"><img border=\"0\" src=\"hdds-#{hdd}-day.png\" alt=\"HDD statistics\"></a>\n</p>\n"}
    line = line.gsub("HDD", tmp)

    target_file << line
  end
  source_file.close
  target_file.close
end

file "html.rant" do |t|
  dependencies = Array.new

  file = File.new(t.name, "w+")
  var[:harddisks].each do |hdd|
    dependencies << "hdds-#{hdd}.html"

    file << <<-EOF
file "hdds-#{hdd}.html" do |t|
  puts "Creating hdds-#{hdd}.html"
  target_file = File.new(t.name, "w+")

  source_file = File.new("hdds.html.tmpl", "r")
  source_file.each_line do |line|
    line = line.gsub("HOSTNAME", "#{var[:hostname]}")
    line = line.gsub("HDD", "#{hdd}")
    target_file << line
  end
  source_file.close

  target_file.close
end

EOF
  end

  var[:interfaces].each do |interface|
    dependencies << "net-#{interface}.html"

    file << <<-EOF
file "net-#{interface}.html" do |t|
  puts "Creating net-#{interface}"
  target_file = File.new(t.name, "w+")

  source_file = File.new("network.html.tmpl", "r")
  source_file.each_line do |line|
    line = line.gsub("HOSTNAME", "#{var[:hostname]}")
    line = line.gsub("INTERFACE", "#{interface}")
    target_file << line
  end
  source_file.close

  target_file.close
end

EOF
  end


    file << <<-EOF
  task :all => ["index.html", "#{var[:html_files].join("\", \"")}"]

  EOF

  file.close
end

task :install => :all do |t|
  if(var[:os] =~ /freebsd/)
    sys "install -d -o root -g wheel -m 755 #{var[:graphdir]}"

    var[:html_files].each do |file|
      sys "install -S -o root -g wheel -m 644 #{file} #{var[:graphdir]}"
    end
  elsif(var[:os] =~ /linux/)
    sys "install -d -o root -g root -m 755 #{var[:graphdir]}"

    var[:html_files].each do |file|
      sys "install -o root -g root -m 644 #{file} #{var[:graphdir]}"
    end
  end
end

gen AutoClean, :clean
